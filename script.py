# -*- coding: utf-8 -*-
"""labview

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kPagtVkjYOuSrW02_3vzf98Wvfcl9Hot
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import pandas as pd
import sklearn
import sklearn.metrics as metrics

['olivetti_faces_target.npy', 'olivetti_faces.npy']

data = np.load("olivetti_faces.npy")
target = np.load("olivetti_faces_target.npy")

# from PIL import Image
#
# import numpy as np
#
# var = 0
# for i in data:
#   rescaled = (255.0 / i.max() * (i - i.min())).astype(np.uint8)
#
#   im = Image.fromarray(rescaled)
#   im.save('base/data'+str(var+1)+'.png')
#   var+=1

import imageio
from scipy import misc

length = len(data)
data = []
for i in range(0,length):
  image = imageio.imread('base/data'+str(i+1)+'.png')
  data.append(np.array(image))
data = np.array(data)

X = data.reshape((data.shape[0],data.shape[1]*data.shape[2]))

X_train, X_test, y_train, y_test  =   train_test_split(X, target, test_size=0.3, stratify=target, random_state=0)


# y_frame=pd.DataFrame()
# y_frame['subject ids']=y_train
# y_frame.groupby(['subject ids']).size().plot.bar(figsize=(15,8),title="Number of Samples for Each Classes")

from sklearn.decomposition import PCA
pca=PCA(n_components=2)
pca.fit(X)
X_pca=pca.transform(X)


n_components=90
pca=PCA(n_components=n_components, whiten=True)
pca.fit(X_train)

X_train_pca=pca.transform(X_train)
X_test_pca=pca.transform(X_test)

clf = sklearn.svm.SVC()
clf.fit(X_train_pca, y_train)
y_pred = clf.predict(X_test_pca)




#plt.imshow(X_test[10])

xt = X_test.reshape( X_test.shape[0],64,64)

def isAllowed(path,list):
  retrn=0
  image = imageio.imread(path)
  image = np.array(image)
  image=image.reshape(1,image.shape[0]*image.shape[0])
  image_pca=pca.transform(image)
  y_pred = clf.predict(image_pca)
  if(y_pred in list):
    retrn = 1
  return retrn
